import{_ as e,c as a,o,V as r}from"./chunks/framework.D9sOcAzr.js";const h=JSON.parse('{"title":"Entornos de Desarrollo Local","description":"","frontmatter":{},"headers":[],"relativePath":"set-up-laravel-dev-env/local-development-environments.md","filePath":"set-up-laravel-dev-env/local-development-environments.md"}'),s={name:"set-up-laravel-dev-env/local-development-environments.md"},n=r('<h1 id="entornos-de-desarrollo-local" tabindex="-1">Entornos de Desarrollo Local <a class="header-anchor" href="#entornos-de-desarrollo-local" aria-label="Permalink to &quot;Entornos de Desarrollo Local&quot;">​</a></h1><p>Para muchos proyectos, será suficiente alojar su entorno de desarrollo utilizando un conjunto de herramientas más simple. Si ya tiene MAMP, WAMP o XAMPP instalado en su sistema, probablemente estará bien para ejecutar Laravel.</p><p>También puedes ejecutar Laravel con el servidor web integrado de PHP. Ejecute <code>php -S localhost: 8000 -t public</code> desde la carpeta raíz de su sitio Laravel y el servidor web integrado de PHP atenderá su sitio en <code>http://localhost:8000/</code>.</p><p>Sin embargo, si desea un poco más de potencia en su entorno de desarrollo (diferentes dominios locales para cada proyecto, administración de dependencias como MySQL, etc.), querrá buscar una herramienta más poderosa que solo el servidor integrado de PHP.</p><p>Laravel ofrece cinco herramientas para el desarrollo local: Artisan Serve, Sail, Valet, Herd y Homestead. Cubriremos cada uno brevemente. Si no está seguro de cuál utilizar, personalmente soy fanático de Valet para usuarios de Mac y Sail para todos los demás.</p><h2 id="artisan-serve" tabindex="-1">Artisan Serve <a class="header-anchor" href="#artisan-serve" aria-label="Permalink to &quot;Artisan Serve&quot;">​</a></h2><p>Si ejecuta <code>php artisan serve</code> después de configurar su aplicación Laravel, la entregará en <code>http://localhost:8000</code>, tal como lo configuramos anteriormente usando el servidor web integrado de PHP. Aquí no obtienes nada más gratis, por lo que su único beneficio significativo es que es más fácil de recordar.</p><h2 id="laravel-sail" tabindex="-1">Laravel Sail <a class="header-anchor" href="#laravel-sail" aria-label="Permalink to &quot;Laravel Sail&quot;">​</a></h2><p>Sail es la forma más sencilla de comenzar con el desarrollo local de Laravel de una manera igual independientemente de su sistema operativo. Viene con un servidor web PHP, bases de datos y una serie de otras sutilezas que hacen que sea muy fácil ejecutar una única instalación de Laravel que sea consistente para todos los desarrolladores de su proyecto, independientemente de las dependencias del proyecto o los entornos de trabajo de sus desarrolladores.</p><p>¿Por qué no uso Sail? Utiliza Docker para lograr lo anterior, y Docker en macOS es lo suficientemente lento como para que prefiera Valet. Pero si eres nuevo en Laravel, especialmente si no usas una Mac, Sail se creó intencionalmente como la forma más sencilla de comenzar a crear tus aplicaciones Laravel.</p><h2 id="laravel-valet" tabindex="-1">Laravel Valet <a class="header-anchor" href="#laravel-valet" aria-label="Permalink to &quot;Laravel Valet&quot;">​</a></h2><p>Si es usuario de macOS (también existen bifurcaciones no oficiales para Windows y Linux), Laravel Valet facilita el servicio de cada una de sus aplicaciones locales de Laravel (y la mayoría de las demás aplicaciones estáticas y basadas en PHP) en diferentes dominios locales.</p><p>Necesitará instalar algunas herramientas usando Homebrew, que la documentación le guiará, pero hay muy pocos pasos desde la instalación inicial hasta la entrega de sus aplicaciones.</p><p>Instale Valet (consulte los <a href="https://laravel.com/docs/11.x/valet" target="_blank" rel="noreferrer">documentos de Valet</a> para obtener las instrucciones de instalación más recientes) y apúntelo a uno o más directorios donde residirán sus sitios. Ejecuté <code>valet park</code> desde mi directorio <code>~/Sites</code>, que es donde puse todas mis aplicaciones en desarrollo. Ahora, puedes simplemente agregar <code>.test</code> al final del nombre del directorio y visitarlo en tu navegador.</p><p>Valet facilita el servicio de aplicaciones de Laravel; podemos usar <code>valet park</code> para servir todas las subcarpetas en una carpeta determinada como <code>{foldername}.test</code>, <code>valet link</code> para servir solo una carpeta, <code>valet open</code> para abrir un navegador y mostrar el dominio servido por Valet para una carpeta, <code>valet secure</code> para servir el sitio Valet con HTTPS y <code>valet share</code> para abrir un túnel ngrok o Expose para que pueda compartir su sitio con otros.</p><h2 id="laravel-homestead" tabindex="-1">Laravel Homestead <a class="header-anchor" href="#laravel-homestead" aria-label="Permalink to &quot;Laravel Homestead&quot;">​</a></h2><p>Homestead es otra herramienta que quizás desee utilizar para configurar su entorno de desarrollo local. Es una herramienta de configuración que se encuentra encima de Vagrant (que es una herramienta para administrar máquinas virtuales) y proporciona una imagen de máquina virtual preconfigurada que está perfectamente configurada para el desarrollo de Laravel y refleja el entorno de producción más común en el que se ejecutan muchos sitios de Laravel.</p><p>Los <a href="https://laravel.com/docs/11.x/homestead" target="_blank" rel="noreferrer">documentos de Homestead</a> son sólidos y se mantienen constantemente actualizados, por lo que te recomendaré que los consultes si quieres aprender cómo funciona y cómo configurarlo.</p>',18),l=[n];function t(i,d,c,u,p,m){return o(),a("div",null,l)}const f=e(s,[["render",t]]);export{h as __pageData,f as default};
