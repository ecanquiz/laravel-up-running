import{_ as a,c as o,o as r,m as e,a as s}from"./chunks/framework.D9sOcAzr.js";const q=JSON.parse('{"title":"¿ Por qué Laravel ?","description":"","frontmatter":{},"headers":[],"relativePath":"why-laravel/index-borrar.md","filePath":"why-laravel/index-borrar.md"}'),n={name:"why-laravel/index-borrar.md"},l=e("h1",{id:"¿-por-que-laravel",tabindex:"-1"},[s("¿ Por qué Laravel ? "),e("a",{class:"header-anchor",href:"#¿-por-que-laravel","aria-label":'Permalink to "¿ Por qué Laravel ?"'},"​")],-1),i=e("p",null,"En los primeros días de la web dinámica, escribir una aplicación web era muy diferente a lo que es hoy. Luego, los desarrolladores fueron responsables de escribir el código no solo para la lógica empresarial única de nuestras aplicaciones, sino también para cada uno de los componentes que son tan comunes en todos los sitios: autenticación de usuarios, validación de entradas, acceso a bases de datos, plantillas y más.",-1),t=e("p",null,"Hoy en día, los programadores tienen docenas de frameworks de desarrollo de aplicaciones y miles de componentes y bibliotecas de fácil acceso. Es un estribillo común entre los programadores que, cuando aprendes un framework, han aparecido tres frameworks más nuevos (y supuestamente mejores) con la intención de reemplazarlo.",-1),c=e("blockquote",null,[e("p",null,"“Sólo porque está ahí” podría ser una justificación válida para escalar una montaña, pero hay mejores razones para optar por utilizar un framework específico, o utilizar un framework en absoluto. Vale la pena preguntarse: ¿por qué los frameworks? Más específicamente, ¿por qué Laravel?")],-1),d=[l,i,t,c];function p(u,m,f,_,h,b){return r(),o("div",null,d)}const w=a(n,[["render",p]]);export{q as __pageData,w as default};
